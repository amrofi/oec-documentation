[
["index.html", "OEC Documentation What is Economic Complexity?", " OEC Documentation Pachá (Mauricio Vargas Sepúlveda) 2018-03-28 What is Economic Complexity? We owe to Adam Smith the idea that the division (specialization) of labor is the secret of the wealth of nations. In a modern interpretation, the division of labor into markets and organizations is what allows the knowledge held by few to reach many, making us collectively wiser. The complexity of an economy is related to the multiplicity of useful knowledge embedded in it. Because individuals are limited in what they know, the only way societies can expand their knowledge base is by facilitating the interaction of individuals in increasingly complex networks in order to make products. We can measure economic complexity by the mix of these products that countries are able to make. Some products, like medical imaging devices or jet engines, embed large amounts of knowledge and are the results of very large networks of people and organizations. These products cannot be made in simpler economies that are missing parts of this network’s capability set. Economic complexity, therefore, is expressed in the composition of a country’s productive output and reflects the structures that emerge to hold and combine knowledge. "],
["how-to-use-this-material.html", "Section 1 How to use this material?", " Section 1 How to use this material? This documentation is an attempt to try to explain how to use the scripts that generate the data that powers The Atlas of Economic Complexity. We made all the scripts available on GitHub. It is important that you read from 2 to (product-space) before reading the coding part. "],
["data-sources.html", "Section 2 Data Sources", " Section 2 Data Sources All of the product data shown on the OEC site is classified using either SITC (Standard International Trade Classification) or HS (Harmonized System). For historical SITC classification data (1962 - 2000), the OEC is using data from [1]. For more recent data (2001 - 2016), the OEC is using data provided by UN COMTRADE. References "],
["data-availability.html", "Section 3 Data Availability 3.1 Yearly data 3.2 Monthly data", " Section 3 Data Availability The datasets I have prepared were obtained from UN COMTRADE while Alexander Simoes was in charge of wrangling CID data. I did cover different periods of years according to the data availability and part of those curated datasets are not in use on the OEC site at the moment. 3.1 Yearly data Classification Availability HS rev 1992 1992 – 2016 HS rev 1996 1996 – 2016 HS rev 2002 2002 – 2016 HS rev 2007 2007 – 2016 HS rev 2012 2012 – 2016 SITC rev 2 2000 – 2016 3.2 Monthly data UN Comtrade provides monthly data for the period Jan, 2010 - Dec, 2016. That data is provides as is, and reporting agencies use different HS classifications from HS 92 to HS17. Raw monthly data mixes different HS codes under one column. Provided that goes against Tidy Data we used official correspondences to generate a column containing HS 07 codes only, and from there we generated our tidy datasets for the same HS revisions as yearly data. SITC rev 2 deserves special attention. SITC rev 2 classification maximum detail considers five digits codes. The correspondence between SITC and HS codes defines both four and six digits HS codes as SITC equivalents. The problem about this conversion is that four digits SITC codes englobe six digits SITC codes (i.e “5711” is an aggrupation of “57111” and “57112” that are plastic products). To obtain consistent tidy datasets with SITC codes we aggregated the trade and limited the depth level to four digits. "],
["data-processing.html", "Section 4 Data Processing 4.1 Tidy Data 4.2 Filling some gaps in our data 4.3 Classification conversion in monthly data 4.4 Countries not included in rankings and indicators 4.5 Scripts on GitHub 4.6 Software versions 4.7 Hardware information 4.8 Reproducibility notes 4.9 Coding style and performant code 4.10 Materials of interest", " Section 4 Data Processing 4.1 Tidy Data We followed Tidy Data principles to obtain an output that in our opinion can be useful for others. Those principles are closely tied to those of relational databases and Codd’s relational algebra. We did not innovate at this point and we only limited to follow the principles exposed in [2] and [3] above all matters related to performing code and coding style. Figure 4.1: Data pipeline 4.2 Filling some gaps in our data For each NA or 0 import/export value we tried to fill the gap. If country A reported NA or 0 exports (imports) of product B to (from) country C, then we searched what country C reported of imports (exports) of product B from (to) country A. The column marker indicated those replacements under this labels: marker meaning 1 imports with replacements 2 exports with replacements 3 imports and exports with replacements NA no replacements needed Figure 4.2: Criteria to replace null imports or exports 4.3 Classification conversion in monthly data As UN COMTRADE states: “Monthly datasets may mix codes from multiple HS revisions and are provided as is except for standardization of trade flow and partner information, as well as conversion to US dollars.” Our solution to obtain tidy datasets was to convert all HS codes available in raw datasets to HS rev 2007. In 4.10 we provide links to correspondence tables that allow us to do that conversion process. 4.4 Countries not included in rankings and indicators The curated data includes all the countries available from UN Comtrade data. However, RCA based calculations such as ECI, PCI, Proximity and Density explained in Chapter 5 consider 128 countries that account for 99% of world trade, 97% of the world’s total GDP and 95% of the world’s population according to [4]. We considered simultaneously: Countries with population greater or equal to 1.2 million Countries whose traded value is greater or equal than 1 billion Figure 4.3: Schematic of the procedure used to determine the countries that were included in the Atlas 4.5 Scripts on GitHub 4.5.1 Getting and cleaning data from UN COMTRADE OEC Yearly Data OEC Monthly Data 4.5.2 Scraping data in The Atlas of Economic Complexity OEC Atlas Data 4.5.3 Product space layouts OEC Product Space 4.5.4 Product and country codes OEC Observatory Codes OEC Comtrade Codes 4.6 Software versions At the moment we are using R 3.4.3 under Ubuntu Server 16.04 and our IDE is RStudio Server Pro 1.1. We built R from binaries in order to obtain a setup linked with multi-threaded BLAS/LAPACK libraries. Our built is linked to Intel MKL 2017 but our results can be reproduced if your R setup is linked to OpenBLAS or your system’s default, only performance differences should be noticed. 4.7 Hardware information Our server features Intel© Xeon 2.27GHz (eight cores) processor and 32 GB (four DDR3 cards of eight gigabytes each). The functions are executed using parallelization on four cores because empirically we detected and overhead due to data communication with the cores when using more cores. Please notice that running our scripts with parallelization demands more RAM than the amount you can find on an average laptop. 4.8 Reproducibility notes To guarantee reproducibility each of our repositories contains a Packrat library that is a snapshot of the R packages we are using. This prevents us from changes in syntax, functions or dependencies. Even our R installation is isolated from apt-get to avoid any accidental update that can change our results. Some projects are linked. In order to avoid multiple copies of files some projects read files from other projects. For example, OEC Yearly Indicators input is the output of OEC Yearly Datasets and OEC Atlas Data. The only reproducibility flaw of this project lies in data downloading. Obtaining raw datasets from UN COMTRADE demands an API key that can only be obtained from institutional access. In my case Professor Cesar A. Hidalgo gave me temporary access. This project will not work on Windows without code edition. Multicore functionality supports multiple workers only on those operating systems that support the fork system call, and this excludes Windows. 4.9 Coding style and performant code We used Tidyverse Style Guide. As cornerstone references for performant code we followed [5] and [6]. Some matrix operations are written in Rcpp to take advantage of C++ speed. To take full advantage of hardware and numerical libraries we are using sparse matrices as it is explained in [7]. 4.10 Materials of interest List of countries in the Atlas (scraped from the original PDF) Country names with equivalency between UN numeric code, ISO 2 and ISO 3 (UN COMTRADE) UN COMTRADE product classifications Layouts to visualize the product space Layouts to visualize the product space (for D3plus 2) UN COMTRADE product classifications may be of interest as it includes all trade classifications levels with detailed description of: (i) Harmonized System revisions 1992 (H0/HS92), 1996 (H1), 2002 (H2), 2007 (H3), 2012 (H4), 2017 (H5); Standard International Trade classification revisions 1 (S1), 2 (S2), 3 (S3), (iii) and 4 (S4); and Broad Economic Categories (BE). References "],
["the-mathematics-of-economic-complexity.html", "Section 5 The Mathematics of Economic Complexity 5.1 Revealed Comparative Advantage (RCA) 5.2 Smooth Revealed Comparative Advantage (SRCA) 5.3 Diversity and Ubiquity 5.4 Reflections Method 5.5 Economic Complexity Index (ECI) 5.6 Product Complexity Index (PCI) 5.7 Product Proximity 5.8 Country Proximity 5.9 Product Density 5.10 Country Density", " Section 5 The Mathematics of Economic Complexity This section is adapted from [4] but it differs at some points. In particular [8] and [9] provide useful technical details. 5.1 Revealed Comparative Advantage (RCA) When associating countries to products it is important to take into account the size of the export volume of countries and that of the world trade of products. This is because, even for the same product, we expect the volume of exports of a large country like China, to be larger than the volume of exports of a small country like Uruguay. By the same token, we expect the export volume of products that represent a large fraction of world trade, such as cars or footwear, to represent a larger share of a country’s exports than products that account for a small fraction of world trade, like cotton seed oil or potato flour. To make countries and products comparable we use Balassa’s definition of Revealed Comparative Advantage (RCA). Balassa’s definition says that a country has revealed Comparative advantage in a product if it exports more than its “fair” share, that is, a share that is equal to the share of total world trade that the product represents. For example, in 2008, with exports of $42 billion, soybeans represented 0.35% of world trade. Of this total, Brazil exported nearly $11 billion, and since Brazil’s total exports for that year were $140 billion, soybeans accounted for 7.8% of Brazil’s exports. This represents around 21 times Brazil’s “fair share” of soybean exports (7.8% divided by 0.35%), so we can say that Brazil has revealed comparative advantage in soybeans. Let \\(x_{c,p}\\) represent the exports of country \\(c\\) in product \\(p\\), we can express the Revealed Comparative Advantage that country \\(c\\) has in product \\(p\\) as: \\[\\begin{equation} \\renewcommand{\\vec}[1]{\\boldsymbol{#1}} \\newcommand{\\R}{\\mathbb{R}} \\tag{5.1} RCA_{c,p} = \\frac{x_{c,p}}{\\sum_c x_{c,p}} / \\frac{\\sum_p x_{c,p}}{\\sum_{c}\\sum_{p} x_{c,p}} \\end{equation}\\] 5.2 Smooth Revealed Comparative Advantage (SRCA) We smooth changes in export volumes induced by the price fluctuation of commodities by using a modification of (5.1) in which \\(x_{c,p}\\) is averaged over the previous three years by using weights: \\[ SRCA_{c,p}^{(t)} = \\frac{\\hat{x}_{c,p}^{(t)}}{\\sum_c \\hat{x}_{c,p}^{(t)}} / \\frac{\\sum_p \\hat{x}_{c,p}^{(t)}}{\\sum_{c}\\sum_{p} \\hat{x}_{c,p}^{(t)}} \\] Where \\[ \\hat{x}_{c,p}^{(t)} = \\frac{2x_{c,p}^{(t)} + x_{c,p}^{(t-1)} + x_{c,p}^{(t-2)}}{4} \\] Please notice this average is different to the original method presented in [4]. We use this measure to construct a matrix that connects each country to the products that it makes. The entries in the matrix are 1 if country exports product with Revealed Comparative Advantage larger than 1, and 0 otherwise. We define this as the matrix \\(M \\in \\mathbb{R}^{C\\times P}\\) with entries: \\[\\begin{equation} \\tag{5.2} m_{c,p} = \\begin{cases}1 &amp; \\text{ if } SRCA_{c,p}^{(t)} \\geq 1\\cr 0 &amp; \\text{ otherwise} \\end{cases} \\end{equation}\\] \\(M\\) is the matrix summarizing which country makes what, and is used to construct the product space and our measures of economic complexity for countries and products. Previous research has tested other values different than 1 to construct the matrix \\(M\\) and found that the results are robust to these changes. In order to compute some of the equations exposed here we had to reduce \\(M\\) by removing cols and rows where each entry is zero. For some years the number of countries \\(C\\) can be less than 128 as it was exposed in 4. The number of products \\(P\\) for a given year can also experience a small decrease. However, we smooth RCA magnitudes before computing \\(M\\) to overcome this problem. It is also important that beyond computability some products were intensively exported in past decades but then their were replaced by other products. Think of floppy disks exports or saltpeter exports. 5.3 Diversity and Ubiquity With \\(M\\) defined as in the previous sections, we can measure Diversity and Ubiquity simply by summing over the rows or columns of that matrix. We define Diversity as: \\[k_{c}^{(0)} = \\sum_p m_{c,p}\\] And Ubiquity as: \\[k_{p}^{(0)} = \\sum_c m_{c,p}\\] 5.4 Reflections Method To generate a more accurate measure of the number of capabilities available in a country, or required by a product, we need to correct the information that diversity and ubiquity carry by using each one to correct the other. For countries, this requires us to calculate the average ubiquity of the products that it exports, the average diversity of the countries that make those products and so forth. For products, this requires us to calculate the average diversity of the countries that make them and the average ubiquity of the other products that these countries make. This can be expressed by the recursion: \\[\\begin{equation} \\tag{5.3} k_{c}^{(n)} = \\frac{1}{k_{c}^{(0)}} \\sum_p m_{c,p} k_{p}^{(n-1)} \\end{equation}\\] \\[\\begin{equation} \\tag{5.4} k_{p}^{(n)} = \\frac{1}{k_{p}^{(0)}} \\sum_c m_{c,p} k_{c}^{(n-1)} \\end{equation}\\] We then insert (5.4) into (5.3) to obtain: \\[\\begin{equation} \\tag{5.5} k_{c}^{(n)} = \\sum_c \\left[\\frac{1}{k_{c}^{(0)}} \\sum_p m_{c,p} \\frac{1}{k_{p}^{(0)}} m_{c,p} \\right] k_{c}^{(n-2)} \\end{equation}\\] The equation above can be conveniently written as a matrix equation^[This formulation takes some ideas from [8] and [9]: \\[\\begin{equation} \\tag{5.6} \\vec{k}^{(n)} = \\tilde{M}\\vec{k}^{(n-2)} \\end{equation}\\] Where \\[\\begin{equation} \\tag{5.7} \\tilde{m}_{c,c&#39;} = \\frac{1}{k_{c}^{(0)}} \\sum_p m_{c,p} \\frac{1}{k_{p}^{(0)}} m_{c,p} \\end{equation}\\] In a similar way we can define \\(\\hat{M}\\) with entries: \\[\\begin{equation} \\tag{5.8} \\hat{m}_{p,p&#39;} = \\frac{1}{k_{p}^{(0)}} \\sum_c m_{c,p} \\frac{1}{k_{c}^{(0)}} m_{c,p} \\end{equation}\\] We note (5.6) is satisfied when \\(k_{c}^{(n)} = k_{c}^{(n-2)} = 1\\). This is the eigenvector of \\(\\tilde{M}\\) which is associated with its largest eigenvalue. Since this eigenvector is a vector of ones, it is not informative. We look, instead, for the eigenvector associated with the second largest eigenvalue. This is the eigenvector that captures the largest amount of variance in the system and is our measure of Economic Complexity. In particular, the interpretation of the scores changes when considering odd or even iteration order \\(n\\), high-order iterations are difficult to interpret, and the process asymptotically converges to a trivial fixed point. For the analysis we used \\(n=19\\) to compute \\(k_c\\) and \\(n=20\\) to compute \\(k_p\\). 5.5 Economic Complexity Index (ECI) From the Reflections Method, we define the Economic Complexity Index (ECI) as: \\[\\begin{equation} \\tag{5.9} ECI_c = \\frac{v_c - \\mu_{v}}{\\sigma_{v}} \\end{equation}\\] Where \\(\\vec{v}\\) is a vector whose coordinates are given by \\(k_{c}^{(19)}\\) where \\(p \\in 1,\\ldots,C\\) \\(\\mu_v = \\sum_c v_c / C\\) (mean of \\(\\vec{v}\\)) \\(\\sigma_v = \\sqrt{\\sum_c (v_c - \\mu_v)^2 / (C - 1)}\\) (standard deviation of \\(\\vec{v}\\)) 5.6 Product Complexity Index (PCI) Similar to the Economic Complexity Index (ECI), we define a Product Complexity Index (PCI). Because of the symmetry of the problem, this can be done simply by exchanging the index of countries \\(c\\) with that for products \\(p\\) in the definitions above. We define PCI as: \\[\\begin{equation} \\tag{5.10} PCI_p = \\frac{w_p - \\mu_{w}}{\\sigma_{w}} \\end{equation}\\] Where \\(\\vec{w}\\) is a vector whose coordinates are given by \\(k_{p}^{(20)}\\) where \\(p \\in 1,\\ldots,P\\) \\(\\mu_w = \\sum_p w_p / P\\) (mean of \\(\\vec{w}\\)) \\(\\sigma_w = \\sqrt{\\sum_p (w_p - \\mu_w)^2 / (P - 1)}\\) (standard deviation of \\(\\vec{w}\\)) 5.7 Product Proximity To make products you need chunks of embedded knowledge which we call capabilities. The capabilities needed to produce one good may or may not be useful in the production of other goods. Since we do not observe capabilities directly, we create a measure that infers the similarity between the capabilities required by a pair of goods by looking at the probability that they are coexported. To quantify this similarity we assume that if two goods share most of the requisite capabilities, the countries that export one will also export the other. By the same token, goods that do not share many capabilities are less likely to be co-exported. Our measure is based on the conditional probability that a country that exports product \\(p\\) will also export product \\(p&#39;\\) (see figure). Since conditional probabilities are not symmetric we take the minimum of the probability of exporting product \\(p\\), given \\(p&#39;\\) and the reverse, to make the measure symmetric and more stringent. For instance, in the year 2008, 17 countries exported wine, 24 exported grapes and 11 exported both, all with \\(RCA &gt; 1\\). Then, the product proximity between wines and grapes is 11/24=0.46. Note that we divide by 24 instead of 17 to minimize false positives. For a pair of goods \\(p\\) and \\(p&#39;\\) we define Product Proximity \\(\\Phi \\in \\mathbb{R}^{P\\times P}\\) as: \\[ \\Phi = (M^t M) \\odot U \\] Where \\(\\odot\\) denotes element-wise multiplication and \\[u_{p,p&#39;} = 1 / \\max(k_{p}^{(0)}, k_{p&#39;}^{(0)})\\] In other terms, each entry of \\(\\Phi\\) corresponds to: \\[ \\phi_{p,p&#39;} = \\frac{\\sum_c m_{c,p} m_{c,p&#39;}}{\\max(k_{p}^{(0)}, k_{p&#39;}^{(0)})} \\] Figure 4.1: An illustrative example for the product proximity measure 5.8 Country Proximity Similar to 5.8, we define Country Proximity \\(\\Lambda \\in \\mathbb{R}^{C\\times C}\\) as: \\[ \\Lambda = (MM^t) \\odot D \\] Where \\[d_{c,c&#39;} = 1 / \\max(k_{c}^{(0)}, k_{c&#39;}^{(0)})\\] In other terms, each entry of \\(\\Lambda\\) corresponds to: \\[ \\lambda_{c,c&#39;} = \\frac{\\sum_p m_{c,p} m_{c,p&#39;}}{\\max(k_{c}^{(0)}, k_{c&#39;}^{(0)})} \\] 5.9 Product Density This concept appears in [10], however the matricial formulation is not a part of the original article. Product Density is the weighted mean proximity of a new potential product \\(p\\) to a country’s current productive capability. In formal terms this is the matrix \\(\\Psi \\in \\mathbb{R}^{C\\times P}\\) defined by: \\[ \\Psi = (M\\Phi) \\oslash (\\hat{M}\\Phi) \\] Where \\(\\hat{m}_{c,p} = 1\\) and \\(\\oslash\\) denotes element-wise division. In other terms, each entry of \\(\\Psi\\) corresponds to: \\[ \\psi_{c,p} = \\frac{\\sum_{p} m_{c,p} \\phi_{p,p&#39;}}{\\sum_{p} \\phi_{p,p&#39;}} \\] 5.10 Country Density Similar to 5.9, we define Country Density as the matrix \\(\\Omega \\in \\mathbb{R}^{C\\times P}\\): \\[ \\Omega = (\\Lambda M) \\oslash (\\Lambda\\hat{M}) \\] In other terms, each entry of \\(\\Omega\\) corresponds to: \\[ \\omega_{c,p} = \\frac{\\sum_{c} m_{c,p} \\phi_{c,c&#39;}}{\\sum_{c} \\phi_{c,c&#39;}} \\] References "],
["the-product-space.html", "Section 6 The Product Space", " Section 6 The Product Space This section is adapted from [4]. To visualize the product space we use some simple design criteria. First, we want the visualization of the product space to be a connected network. By this, we mean avoiding islands of isolated products. the second criteria is that we want the network visualization to be relatively sparse. trying to visualize too many links can create unnecessary visual complexity where the most relevant connections will be occluded. this criteria is achieved by creating a visualization in which the average number of links per node is not larger than 5 and results in a representation that can summarize the structure of the product space using the strongest 1% of the links. To make sure the visualization of the product space is connected, we calculate the Maximum Spanning Tree (MST) of the proximity matrix. MST is the set of links that connects all the nodes in the network using a minimum number of connections and the maximum possible sum of proximities. We calculated the MST using Kruskal’s algorithm. Basically the algorithm sorts the values of the proximity matrix in descending order and then includes links in the MST if and only if they connect an isolated product. By definition, the MST includes all products, but the number of links is the minimum possible. The second step is to add the strongest connections that were not selected for the MST. By definition a spanning tree for 200 nodes contains 199 edges. Suppose we add 100 connections satisfying our criterion. With the additional 100 connections we end up with 300 edges. After selecting the links using the above mentioned criteria we build a visualization using a Force-Directed layout algorithm. in this algorithm nodes repel each other, just like electric charges, while edges act as spring trying to bring connected nodes together. this helps to create a visualization in which densely connected sets of nodes are put together while nodes that are not connected are pushed apart. Finally, we manually clean up the layout to minimize edge crossings and provide the most clearly representation possible. References "],
["acknowledgements.html", "Section 7 Acknowledgements", " Section 7 Acknowledgements The author thanks Jian Gao for reviewing some pen notes and equations, and also to George Vega Yon and Joshua Kunst who suggested useful packages and libraries. "],
["references.html", "Section 8 References", " Section 8 References "]
]
